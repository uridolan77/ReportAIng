using System.ComponentModel.DataAnnotations;

namespace BIReportingCopilot.Core.Models;

// AutoGenerationRequest, AutoGenerationResponse, AutoGeneratedTableContext, AutoGeneratedGlossaryTerm, and BusinessRelationshipAnalysis already exist in other files - removed duplicates

/// <summary>
/// Column business context model
/// </summary>
public class ColumnBusinessContext
{
    public string ColumnName { get; set; } = string.Empty;
    public string BusinessName { get; set; } = string.Empty;
    public string BusinessMeaning { get; set; } = string.Empty;
    public string BusinessContext { get; set; } = string.Empty;
    public List<string> DataExamples { get; set; } = new();
    public string ValidationRules { get; set; } = string.Empty;
    public bool IsKeyColumn { get; set; }
    public double ConfidenceScore { get; set; }
}

// TableRelationship, BusinessDomain, DataFlow, TuningRequest, TuningResult, and TuningStatus already exist in other files - removed duplicates

/// <summary>
/// Auto generation options model
/// </summary>
public class AutoGenerationOptions
{
    public bool IncludeBusinessContext { get; set; } = true;
    public bool IncludeGlossaryTerms { get; set; } = true;
    public bool IncludeRelationshipAnalysis { get; set; } = true;
    public bool ValidateResults { get; set; } = true;
    public double MinConfidenceThreshold { get; set; } = 0.7;
    public int MaxItemsToGenerate { get; set; } = 100;
    public Dictionary<string, object> CustomOptions { get; set; } = new();
}

/// <summary>
/// Tuning configuration model
/// </summary>
public class TuningConfiguration
{
    public double LearningRate { get; set; } = 0.001;
    public int BatchSize { get; set; } = 32;
    public int MaxIterations { get; set; } = 1000;
    public double ConvergenceThreshold { get; set; } = 0.001;
    public bool EnableEarlyStopping { get; set; } = true;
    public int EarlyStoppingPatience { get; set; } = 10;
    public Dictionary<string, object> CustomSettings { get; set; } = new();
}

/// <summary>
/// Auto generation type enumeration
/// </summary>
public enum AutoGenerationType
{
    TableContext,
    GlossaryTerms,
    BusinessRelationships,
    All
}

// RelationshipType already exists in other files - removed duplicate

/// <summary>
/// Tuning type enumeration
/// </summary>
public enum TuningType
{
    QueryOptimization,
    ModelTraining,
    ParameterTuning,
    PerformanceOptimization
}

/// <summary>
/// Tuning state enumeration
/// </summary>
public enum TuningState
{
    Pending,
    Running,
    Completed,
    Failed,
    Cancelled
}
