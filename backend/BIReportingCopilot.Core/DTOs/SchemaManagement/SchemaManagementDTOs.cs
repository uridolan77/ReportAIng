using System.ComponentModel.DataAnnotations;

namespace BIReportingCopilot.Core.DTOs.SchemaManagement;

/// <summary>
/// DTO for business schema summary information
/// </summary>
public class BusinessSchemaDto
{
    public Guid Id { get; set; }
    public string Name { get; set; } = string.Empty;
    public string? Description { get; set; }
    public string CreatedBy { get; set; } = string.Empty;
    public DateTime CreatedAt { get; set; }
    public string UpdatedBy { get; set; } = string.Empty;
    public DateTime UpdatedAt { get; set; }
    public bool IsActive { get; set; }
    public bool IsDefault { get; set; }
    public List<string> Tags { get; set; } = new();
    public int TotalVersions { get; set; }
    public BusinessSchemaVersionDto? CurrentVersion { get; set; }
    public DateTime LastModified { get; set; }
}

/// <summary>
/// DTO for business schema version information
/// </summary>
public class BusinessSchemaVersionDto
{
    public Guid Id { get; set; }
    public Guid SchemaId { get; set; }
    public int VersionNumber { get; set; }
    public string? VersionName { get; set; }
    public string? Description { get; set; }
    public string CreatedBy { get; set; } = string.Empty;
    public DateTime CreatedAt { get; set; }
    public bool IsActive { get; set; }
    public bool IsCurrent { get; set; }
    public List<ChangeLogEntry> ChangeLog { get; set; } = new();
    public string DisplayName { get; set; } = string.Empty;
    public int TotalTables { get; set; }
    public int TotalColumns { get; set; }
    public int TotalGlossaryTerms { get; set; }
    public int TotalRelationships { get; set; }
}

/// <summary>
/// DTO for detailed schema version with all content
/// </summary>
public class DetailedSchemaVersionDto : BusinessSchemaVersionDto
{
    public List<SchemaTableContextDto> TableContexts { get; set; } = new();
    public List<SchemaGlossaryTermDto> GlossaryTerms { get; set; } = new();
    public List<SchemaRelationshipDto> Relationships { get; set; } = new();
}

/// <summary>
/// DTO for schema table context
/// </summary>
public class SchemaTableContextDto
{
    public Guid Id { get; set; }
    public Guid SchemaVersionId { get; set; }
    public string TableName { get; set; } = string.Empty;
    public string SchemaName { get; set; } = "dbo";
    public string? BusinessPurpose { get; set; }
    public string? BusinessContext { get; set; }
    public string? PrimaryUseCase { get; set; }
    public List<string> KeyBusinessMetrics { get; set; } = new();
    public List<string> CommonQueryPatterns { get; set; } = new();
    public List<string> BusinessRules { get; set; } = new();
    public decimal? ConfidenceScore { get; set; }
    public bool IsAutoGenerated { get; set; }
    public DateTime CreatedAt { get; set; }
    public DateTime UpdatedAt { get; set; }
    public string FullTableName { get; set; } = string.Empty;
    public List<SchemaColumnContextDto> ColumnContexts { get; set; } = new();
}

/// <summary>
/// DTO for schema column context
/// </summary>
public class SchemaColumnContextDto
{
    public Guid Id { get; set; }
    public Guid TableContextId { get; set; }
    public string ColumnName { get; set; } = string.Empty;
    public string? BusinessName { get; set; }
    public string? BusinessDescription { get; set; }
    public string? BusinessDataType { get; set; }
    public List<string> DataExamples { get; set; } = new();
    public List<string> ValidationRules { get; set; } = new();
    public List<string> CommonUseCases { get; set; } = new();
    public bool IsKeyColumn { get; set; }
    public bool IsPrimaryKey { get; set; }
    public bool IsForeignKey { get; set; }
    public decimal? ConfidenceScore { get; set; }
    public bool IsAutoGenerated { get; set; }
    public DateTime CreatedAt { get; set; }
    public DateTime UpdatedAt { get; set; }
}

/// <summary>
/// DTO for schema glossary term
/// </summary>
public class SchemaGlossaryTermDto
{
    public Guid Id { get; set; }
    public Guid SchemaVersionId { get; set; }
    public string Term { get; set; } = string.Empty;
    public string Definition { get; set; } = string.Empty;
    public string? BusinessContext { get; set; }
    public string? Category { get; set; }
    public List<string> Synonyms { get; set; } = new();
    public List<string> RelatedTerms { get; set; } = new();
    public List<string> SourceTables { get; set; } = new();
    public List<string> SourceColumns { get; set; } = new();
    public decimal? ConfidenceScore { get; set; }
    public bool IsAutoGenerated { get; set; }
    public DateTime CreatedAt { get; set; }
    public DateTime UpdatedAt { get; set; }
}

/// <summary>
/// DTO for schema relationship
/// </summary>
public class SchemaRelationshipDto
{
    public Guid Id { get; set; }
    public Guid SchemaVersionId { get; set; }
    public string FromTable { get; set; } = string.Empty;
    public string ToTable { get; set; } = string.Empty;
    public string RelationshipType { get; set; } = string.Empty;
    public List<string> FromColumns { get; set; } = new();
    public List<string> ToColumns { get; set; } = new();
    public string? BusinessDescription { get; set; }
    public decimal? ConfidenceScore { get; set; }
    public bool IsAutoGenerated { get; set; }
    public DateTime CreatedAt { get; set; }
    public DateTime UpdatedAt { get; set; }
}

/// <summary>
/// DTO for creating a new business schema
/// </summary>
public class CreateBusinessSchemaRequest
{
    [Required]
    [StringLength(100)]
    public string Name { get; set; } = string.Empty;
    
    [StringLength(500)]
    public string? Description { get; set; }
    
    public List<string> Tags { get; set; } = new();
    
    public bool IsDefault { get; set; } = false;
    
    // Optional: Create with initial version
    public CreateSchemaVersionRequest? InitialVersion { get; set; }
}

/// <summary>
/// DTO for creating a new schema version
/// </summary>
public class CreateSchemaVersionRequest
{
    public Guid SchemaId { get; set; }
    
    [StringLength(50)]
    public string? VersionName { get; set; }
    
    [StringLength(1000)]
    public string? Description { get; set; }
    
    public bool IsCurrent { get; set; } = true;
    
    public List<ChangeLogEntry> ChangeLog { get; set; } = new();
    
    // Content for the version
    public List<SchemaTableContextDto> TableContexts { get; set; } = new();
    public List<SchemaGlossaryTermDto> GlossaryTerms { get; set; } = new();
    public List<SchemaRelationshipDto> Relationships { get; set; } = new();
}

/// <summary>
/// DTO for updating a business schema
/// </summary>
public class UpdateBusinessSchemaRequest
{
    [Required]
    [StringLength(100)]
    public string Name { get; set; } = string.Empty;
    
    [StringLength(500)]
    public string? Description { get; set; }
    
    public List<string> Tags { get; set; } = new();
    
    public bool IsActive { get; set; } = true;
    
    public bool IsDefault { get; set; } = false;
}

/// <summary>
/// DTO for applying auto-generated content to a schema
/// </summary>
public class ApplyToSchemaRequest
{
    public Guid? SchemaId { get; set; } // If null, create new schema
    
    public string? NewSchemaName { get; set; } // Required if SchemaId is null
    
    public string? NewSchemaDescription { get; set; }
    
    public string? VersionName { get; set; }
    
    public string? VersionDescription { get; set; }
    
    public bool CreateNewVersion { get; set; } = true;
    
    public bool SetAsCurrent { get; set; } = true;
    
    public List<ChangeLogEntry> ChangeLog { get; set; } = new();
    
    // Auto-generated content to apply
    public List<SchemaTableContextDto> TableContexts { get; set; } = new();
    public List<SchemaGlossaryTermDto> GlossaryTerms { get; set; } = new();
    public List<SchemaRelationshipDto> Relationships { get; set; } = new();
}

/// <summary>
/// DTO for user schema preferences
/// </summary>
public class UserSchemaPreferenceDto
{
    public Guid Id { get; set; }
    public string UserId { get; set; } = string.Empty;
    public Guid SchemaVersionId { get; set; }
    public bool IsDefault { get; set; }
    public DateTime CreatedAt { get; set; }
    public DateTime UpdatedAt { get; set; }
    public BusinessSchemaVersionDto SchemaVersion { get; set; } = null!;
}

/// <summary>
/// DTO for schema comparison
/// </summary>
public class SchemaComparisonDto
{
    public BusinessSchemaVersionDto SourceVersion { get; set; } = null!;
    public BusinessSchemaVersionDto TargetVersion { get; set; } = null!;
    public List<SchemaDifference> Differences { get; set; } = new();
    public SchemaComparisonSummary Summary { get; set; } = new();
}

/// <summary>
/// DTO for change log entries
/// </summary>
public class ChangeLogEntry
{
    public DateTime Timestamp { get; set; }
    public string Type { get; set; } = string.Empty; // Added, Modified, Removed
    public string Category { get; set; } = string.Empty; // Table, Column, Glossary, Relationship
    public string Item { get; set; } = string.Empty;
    public string? Description { get; set; }
    public string? OldValue { get; set; }
    public string? NewValue { get; set; }
}

/// <summary>
/// DTO for schema differences
/// </summary>
public class SchemaDifference
{
    public string Type { get; set; } = string.Empty; // Added, Modified, Removed
    public string Category { get; set; } = string.Empty; // Table, Column, Glossary, Relationship
    public string Item { get; set; } = string.Empty;
    public string? Description { get; set; }
    public object? SourceValue { get; set; }
    public object? TargetValue { get; set; }
}

/// <summary>
/// DTO for schema comparison summary
/// </summary>
public class SchemaComparisonSummary
{
    public int TablesAdded { get; set; }
    public int TablesModified { get; set; }
    public int TablesRemoved { get; set; }
    public int ColumnsAdded { get; set; }
    public int ColumnsModified { get; set; }
    public int ColumnsRemoved { get; set; }
    public int GlossaryTermsAdded { get; set; }
    public int GlossaryTermsModified { get; set; }
    public int GlossaryTermsRemoved { get; set; }
    public int RelationshipsAdded { get; set; }
    public int RelationshipsModified { get; set; }
    public int RelationshipsRemoved { get; set; }
    public int TotalChanges => TablesAdded + TablesModified + TablesRemoved + 
                              ColumnsAdded + ColumnsModified + ColumnsRemoved +
                              GlossaryTermsAdded + GlossaryTermsModified + GlossaryTermsRemoved +
                              RelationshipsAdded + RelationshipsModified + RelationshipsRemoved;
}
