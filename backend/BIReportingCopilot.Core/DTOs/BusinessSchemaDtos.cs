using System.ComponentModel.DataAnnotations;

namespace BIReportingCopilot.Core.DTOs;

/// <summary>
/// Business schema DTO
/// </summary>
public class BusinessSchemaDto
{
    public Guid Id { get; set; }
    public string Name { get; set; } = string.Empty;
    public string? Description { get; set; }
    public string CreatedBy { get; set; } = string.Empty;
    public DateTime CreatedAt { get; set; }
    public string UpdatedBy { get; set; } = string.Empty;
    public DateTime UpdatedAt { get; set; }
    public bool IsActive { get; set; } = true;
    public bool IsDefault { get; set; } = false;
    public List<string> Tags { get; set; } = new();
    public List<BusinessSchemaVersionDto> Versions { get; set; } = new();
    public BusinessSchemaVersionDto? CurrentVersion { get; set; }
    public int TotalVersions { get; set; }
    public DateTime LastModified { get; set; }
}

/// <summary>
/// Business schema version DTO
/// </summary>
public class BusinessSchemaVersionDto
{
    public Guid Id { get; set; }
    public Guid SchemaId { get; set; }
    public int VersionNumber { get; set; }
    public string? VersionName { get; set; }
    public string? Description { get; set; }
    public string CreatedBy { get; set; } = string.Empty;
    public DateTime CreatedAt { get; set; }
    public bool IsActive { get; set; } = true;
    public bool IsCurrent { get; set; } = false;
    public List<SchemaChangeLogEntry> ChangeLog { get; set; } = new();
    public string DisplayName { get; set; } = string.Empty;
    public int TotalTables { get; set; }
    public int TotalColumns { get; set; }
    public int TotalGlossaryTerms { get; set; }
    public int TotalRelationships { get; set; }
    public List<SchemaTableContextDto> TableContexts { get; set; } = new();
    public List<SchemaGlossaryTermDto> GlossaryTerms { get; set; } = new();
    public List<SchemaRelationshipDto> Relationships { get; set; } = new();
}

/// <summary>
/// Schema table context DTO
/// </summary>
public class SchemaTableContextDto
{
    public Guid Id { get; set; }
    public Guid SchemaVersionId { get; set; }
    public string TableName { get; set; } = string.Empty;
    public string SchemaName { get; set; } = "dbo";
    public string? BusinessPurpose { get; set; }
    public string? BusinessContext { get; set; }
    public string? PrimaryUseCase { get; set; }
    public List<string> KeyBusinessMetrics { get; set; } = new();
    public List<string> CommonQueryPatterns { get; set; } = new();
    public List<string> BusinessRules { get; set; } = new();
    public decimal? ConfidenceScore { get; set; }
    public bool IsAutoGenerated { get; set; } = false;
    public DateTime CreatedAt { get; set; }
    public DateTime UpdatedAt { get; set; }
    public bool IsActive { get; set; } = true;
    public string FullTableName { get; set; } = string.Empty;
    public List<SchemaColumnContextDto> ColumnContexts { get; set; } = new();
}

/// <summary>
/// Schema column context DTO
/// </summary>
public class SchemaColumnContextDto
{
    public Guid Id { get; set; }
    public Guid TableContextId { get; set; }
    public string ColumnName { get; set; } = string.Empty;
    public string? BusinessName { get; set; }
    public string? BusinessDescription { get; set; }
    public string? BusinessDataType { get; set; }
    public List<string> DataExamples { get; set; } = new();
    public List<string> ValidationRules { get; set; } = new();
    public List<string> CommonUseCases { get; set; } = new();
    public bool IsKeyColumn { get; set; } = false;
    public bool IsPrimaryKey { get; set; } = false;
    public bool IsForeignKey { get; set; } = false;
    public decimal? ConfidenceScore { get; set; }
    public bool IsAutoGenerated { get; set; } = false;
    public DateTime CreatedAt { get; set; }
    public DateTime UpdatedAt { get; set; }
    public bool IsActive { get; set; } = true;
}

/// <summary>
/// Schema glossary term DTO
/// </summary>
public class SchemaGlossaryTermDto
{
    public Guid Id { get; set; }
    public Guid SchemaVersionId { get; set; }
    public string Term { get; set; } = string.Empty;
    public string Definition { get; set; } = string.Empty;
    public string? BusinessContext { get; set; }
    public string? Category { get; set; }
    public List<string> Synonyms { get; set; } = new();
    public List<string> RelatedTerms { get; set; } = new();
    public List<string> SourceTables { get; set; } = new();
    public List<string> SourceColumns { get; set; } = new();
    public decimal? ConfidenceScore { get; set; }
    public bool IsAutoGenerated { get; set; } = false;
    public DateTime CreatedAt { get; set; }
    public DateTime UpdatedAt { get; set; }
    public bool IsActive { get; set; } = true;
}

/// <summary>
/// Schema relationship DTO
/// </summary>
public class SchemaRelationshipDto
{
    public Guid Id { get; set; }
    public Guid SchemaVersionId { get; set; }
    public string FromTable { get; set; } = string.Empty;
    public string ToTable { get; set; } = string.Empty;
    public string RelationshipType { get; set; } = string.Empty;
    public List<string> FromColumns { get; set; } = new();
    public List<string> ToColumns { get; set; } = new();
    public string? BusinessDescription { get; set; }
    public decimal? ConfidenceScore { get; set; }
    public bool IsAutoGenerated { get; set; } = false;
    public DateTime CreatedAt { get; set; }
    public DateTime UpdatedAt { get; set; }
    public bool IsActive { get; set; } = true;
    public Guid SourceTableId { get; set; }
    public Guid TargetTableId { get; set; }
}

/// <summary>
/// User schema preference DTO
/// </summary>
public class UserSchemaPreferenceDto
{
    public Guid Id { get; set; }
    public string UserId { get; set; } = string.Empty;
    public Guid SchemaVersionId { get; set; }
    public Guid SchemaId { get; set; }
    public bool IsDefault { get; set; } = false;
    public bool IsActive { get; set; } = true;
    public DateTime LastUsed { get; set; }
    public DateTime CreatedAt { get; set; }
    public DateTime UpdatedAt { get; set; }
    public BusinessSchemaDto? Schema { get; set; }
    public BusinessSchemaVersionDto? SchemaVersion { get; set; }
}

/// <summary>
/// Schema change log entry
/// </summary>
public class SchemaChangeLogEntry
{
    public DateTime Timestamp { get; set; }
    public string ChangeType { get; set; } = string.Empty;
    public string Description { get; set; } = string.Empty;
    public string ChangedBy { get; set; } = string.Empty;
    public Dictionary<string, object> Details { get; set; } = new();
}

#region Request DTOs

/// <summary>
/// Create business schema request
/// </summary>
public class CreateBusinessSchemaRequest
{
    [Required]
    [StringLength(100)]
    public string Name { get; set; } = string.Empty;

    [StringLength(500)]
    public string? Description { get; set; }

    public List<string> Tags { get; set; } = new();
    
    public bool IsDefault { get; set; } = false;
    
    /// <summary>
    /// Whether to create an initial version automatically
    /// </summary>
    public bool CreateInitialVersion { get; set; } = true;
    
    /// <summary>
    /// Initial version details if CreateInitialVersion is true
    /// </summary>
    public CreateSchemaVersionRequest? InitialVersion { get; set; }
}

/// <summary>
/// Update business schema request
/// </summary>
public class UpdateBusinessSchemaRequest
{
    [StringLength(100)]
    public string? Name { get; set; }

    [StringLength(500)]
    public string? Description { get; set; }

    public List<string>? Tags { get; set; }
    
    public bool? IsActive { get; set; }
    
    public bool? IsDefault { get; set; }
}

/// <summary>
/// Create schema version request
/// </summary>
public class CreateSchemaVersionRequest
{
    public Guid SchemaId { get; set; }

    [StringLength(50)]
    public string? VersionName { get; set; }

    [StringLength(1000)]
    public string? Description { get; set; }

    public List<SchemaChangeLogEntry> ChangeLog { get; set; } = new();
    
    /// <summary>
    /// Whether to set this version as current
    /// </summary>
    public bool IsCurrent { get; set; } = false;
    public bool SetAsCurrent { get; set; } = false;
    
    /// <summary>
    /// Source version to copy context from (optional)
    /// </summary>
    public Guid? CopyFromVersionId { get; set; }
    
    public List<SchemaTableContextDto> TableContexts { get; set; } = new();
    public List<SchemaGlossaryTermDto> GlossaryTerms { get; set; } = new();
    public List<SchemaRelationshipDto> Relationships { get; set; } = new();
}

/// <summary>
/// Create table context request
/// </summary>
public class CreateTableContextRequest
{
    [Required]
    [StringLength(128)]
    public string TableName { get; set; } = string.Empty;

    [StringLength(128)]
    public string SchemaName { get; set; } = "dbo";

    [StringLength(500)]
    public string? BusinessPurpose { get; set; }

    public string? BusinessContext { get; set; }

    [StringLength(500)]
    public string? PrimaryUseCase { get; set; }

    public List<string> KeyBusinessMetrics { get; set; } = new();
    public List<string> CommonQueryPatterns { get; set; } = new();
    public List<string> BusinessRules { get; set; } = new();
    
    public List<CreateColumnContextRequest> Columns { get; set; } = new();
}

/// <summary>
/// Create column context request
/// </summary>
public class CreateColumnContextRequest
{
    [Required]
    [StringLength(128)]
    public string ColumnName { get; set; } = string.Empty;

    [StringLength(200)]
    public string? BusinessName { get; set; }

    [StringLength(1000)]
    public string? BusinessDescription { get; set; }

    [StringLength(50)]
    public string? BusinessDataType { get; set; }

    public List<string> DataExamples { get; set; } = new();
    public List<string> ValidationRules { get; set; } = new();
    public List<string> CommonUseCases { get; set; } = new();
    
    public bool IsKeyColumn { get; set; } = false;
    public bool IsPrimaryKey { get; set; } = false;
    public bool IsForeignKey { get; set; } = false;
}

/// <summary>
/// Set user default schema request
/// </summary>
public class SetUserDefaultSchemaRequest
{
    [Required]
    public Guid SchemaId { get; set; }
    
    public Guid? VersionId { get; set; }
}

/// <summary>
/// Generate context request
/// </summary>
public class GenerateContextRequest
{
    /// <summary>
    /// Connection string to the target database
    /// </summary>
    [Required]
    public string ConnectionString { get; set; } = string.Empty;
    
    /// <summary>
    /// Specific tables to generate context for (empty = all tables)
    /// </summary>
    public List<string> TargetTables { get; set; } = new();
    
    /// <summary>
    /// Whether to overwrite existing context
    /// </summary>
    public bool OverwriteExisting { get; set; } = false;
    
    /// <summary>
    /// AI model to use for generation
    /// </summary>
    public string? AIModel { get; set; }
    
    /// <summary>
    /// Additional context for AI generation
    /// </summary>
    public string? AdditionalContext { get; set; }
}

/// <summary>
/// Import context request
/// </summary>
public class ImportContextRequest
{
    [Required]
    public string SourceType { get; set; } = string.Empty; // "schema", "file", "database"
    
    public Guid? SourceSchemaVersionId { get; set; }
    public string? SourceFilePath { get; set; }
    public string? SourceConnectionString { get; set; }
    
    public bool OverwriteExisting { get; set; } = false;
    public List<string> TargetTables { get; set; } = new();
}

#endregion

#region Result DTOs

/// <summary>
/// Schema generation result
/// </summary>
public class SchemaGenerationResultDto
{
    public bool Success { get; set; }
    public string Message { get; set; } = string.Empty;
    public int TablesProcessed { get; set; }
    public int ColumnsProcessed { get; set; }
    public int GlossaryTermsGenerated { get; set; }
    public List<string> Warnings { get; set; } = new();
    public List<string> Errors { get; set; } = new();
    public TimeSpan ProcessingTime { get; set; }
    public Dictionary<string, object> Details { get; set; } = new();
}

/// <summary>
/// Schema import result
/// </summary>
public class SchemaImportResultDto
{
    public bool Success { get; set; }
    public string Message { get; set; } = string.Empty;
    public int TablesImported { get; set; }
    public int ColumnsImported { get; set; }
    public int GlossaryTermsImported { get; set; }
    public int RelationshipsImported { get; set; }
    public List<string> Warnings { get; set; } = new();
    public List<string> Errors { get; set; } = new();
    public TimeSpan ProcessingTime { get; set; }
    public Dictionary<string, object> Details { get; set; } = new();
}

/// <summary>
/// Schema analytics and statistics DTOs
/// </summary>
public class SchemaStatisticsDto
{
    public Guid SchemaId { get; set; }
    public string SchemaName { get; set; } = string.Empty;
    public int TotalVersions { get; set; }
    public int TotalTables { get; set; }
    public int TotalColumns { get; set; }
    public int TotalGlossaryTerms { get; set; }
    public int TotalRelationships { get; set; }
    public int TotalUsers { get; set; }
    public DateTime LastModified { get; set; }
    public string LastModifiedBy { get; set; } = string.Empty;
    public int UsageCount { get; set; }
    public DateTime? LastUsed { get; set; }
}

public class SchemaVersionStatisticsDto
{
    public Guid VersionId { get; set; }
    public string VersionName { get; set; } = string.Empty;
    public int VersionNumber { get; set; }
    public int TotalTables { get; set; }
    public int TotalColumns { get; set; }
    public int TotalGlossaryTerms { get; set; }
    public int TotalRelationships { get; set; }
    public int AutoGeneratedTables { get; set; }
    public int AutoGeneratedColumns { get; set; }
    public int AutoGeneratedTerms { get; set; }
    public decimal AverageConfidenceScore { get; set; }
    public int UsageCount { get; set; }
    public DateTime? LastUsed { get; set; }
}

public class SchemaUsageAnalyticsDto
{
    public DateTime Date { get; set; }
    public int QueriesGenerated { get; set; }
    public int UniqueUsers { get; set; }
    public int TablesAccessed { get; set; }
    public List<string> PopularTables { get; set; } = new();
    public List<string> PopularTerms { get; set; } = new();
    public TimeSpan AverageQueryTime { get; set; }
    public double SuccessRate { get; set; }
}

/// <summary>
/// Optimized business table info DTO for list views
/// </summary>
public class BusinessTableInfoOptimizedDto
{
    public long Id { get; set; }
    public string TableName { get; set; } = string.Empty;
    public string SchemaName { get; set; } = string.Empty;
    public string BusinessPurpose { get; set; } = string.Empty;
    public string BusinessContext { get; set; } = string.Empty;
    public bool IsActive { get; set; } = true;
    public DateTime? UpdatedDate { get; set; }
    public string? UpdatedBy { get; set; }
    public int ColumnCount { get; set; }
    public DateTime CreatedDate { get; set; }
}

#endregion
