// <auto-generated />
using System;
using BIReportingCopilot.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BIReportingCopilot.Infrastructure.Migrations
{
    [DbContext(typeof(BICopilotContext))]
    [Migration("20250526192711_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BIReportingCopilot.Infrastructure.Data.Entities.AuditLogEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp");

                    b.HasIndex("Action", "Timestamp");

                    b.HasIndex("UserId", "Timestamp");

                    b.ToTable("AuditLog");
                });

            modelBuilder.Entity("BIReportingCopilot.Infrastructure.Data.Entities.PromptTemplateEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Parameters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SuccessRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsageCount")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IsActive", "Name");

                    b.HasIndex("Name", "Version")
                        .IsUnique();

                    b.ToTable("PromptTemplates");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "You are a SQL Server expert helping generate business intelligence reports.\n\nDatabase schema:\n{schema}\n\nWhen the user asks: '{question}'\n- Write a T-SQL SELECT query to answer the question.\n- Only use SELECT statements, never write/alter data.\n- Use proper table and column names from the schema.\n- Include appropriate WHERE clauses for filtering.\n- Use JOINs when data from multiple tables is needed.\n- Format the query for readability.\n\nReturn only the SQL query without any explanation or markdown formatting.",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2025, 5, 26, 19, 27, 10, 999, DateTimeKind.Utc).AddTicks(7306),
                            Description = "Basic template for generating SQL queries from natural language",
                            IsActive = true,
                            Name = "BasicQueryGeneration",
                            UsageCount = 0,
                            Version = "1.0"
                        });
                });

            modelBuilder.Entity("BIReportingCopilot.Infrastructure.Data.Entities.QueryCacheEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CacheTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiryTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("HitCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastAccessedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedQuery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QueryHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ResultData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultMetadata")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExpiryTimestamp");

                    b.HasIndex("LastAccessedDate");

                    b.HasIndex("QueryHash")
                        .IsUnique();

                    b.ToTable("QueryCache");
                });

            modelBuilder.Entity("BIReportingCopilot.Infrastructure.Data.Entities.QueryHistoryEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("ConfidenceScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ExecutionTimeMs")
                        .HasColumnType("int");

                    b.Property<string>("GeneratedSQL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("bit");

                    b.Property<string>("NaturalLanguageQuery")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<byte?>("QueryComplexity")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("QueryTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ResultRowCount")
                        .HasColumnType("int");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("UserFeedback")
                        .HasColumnType("tinyint");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("QueryTimestamp");

                    b.HasIndex("SessionId");

                    b.HasIndex("UserId", "QueryTimestamp");

                    b.ToTable("QueryHistory");
                });

            modelBuilder.Entity("BIReportingCopilot.Infrastructure.Data.Entities.QueryPerformanceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double>("CpuTime")
                        .HasColumnType("float");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExecutionTimeMs")
                        .HasColumnType("int");

                    b.Property<long>("LogicalReads")
                        .HasColumnType("bigint");

                    b.Property<long>("PhysicalReads")
                        .HasColumnType("bigint");

                    b.Property<string>("QueryHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<long>("RowsAffected")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("QueryHash");

                    b.HasIndex("Timestamp");

                    b.ToTable("QueryPerformance");
                });

            modelBuilder.Entity("BIReportingCopilot.Infrastructure.Data.Entities.RefreshTokenEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceInfo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("ExpiresAt");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("BIReportingCopilot.Infrastructure.Data.Entities.SchemaMetadataEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BusinessDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ColumnName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatabaseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsForeignKey")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNullable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrimaryKey")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("SampleValues")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("SchemaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SemanticTags")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TableName", "ColumnName");

                    b.HasIndex("DatabaseName", "SchemaName", "TableName");

                    b.ToTable("SchemaMetadata");
                });

            modelBuilder.Entity("BIReportingCopilot.Infrastructure.Data.Entities.SystemConfigurationEntity", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsEncrypted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("SystemConfiguration");

                    b.HasData(
                        new
                        {
                            Key = "MaxQueryExecutionTimeSeconds",
                            CreatedDate = new DateTime(2025, 5, 26, 19, 27, 10, 999, DateTimeKind.Utc).AddTicks(7131),
                            DataType = "int",
                            Description = "Maximum time allowed for query execution",
                            IsEncrypted = false,
                            LastUpdated = new DateTime(2025, 5, 26, 19, 27, 10, 999, DateTimeKind.Utc).AddTicks(7133),
                            UpdatedBy = "System",
                            Value = "30"
                        },
                        new
                        {
                            Key = "MaxResultRows",
                            CreatedDate = new DateTime(2025, 5, 26, 19, 27, 10, 999, DateTimeKind.Utc).AddTicks(7134),
                            DataType = "int",
                            Description = "Maximum number of rows returned per query",
                            IsEncrypted = false,
                            LastUpdated = new DateTime(2025, 5, 26, 19, 27, 10, 999, DateTimeKind.Utc).AddTicks(7135),
                            UpdatedBy = "System",
                            Value = "10000"
                        },
                        new
                        {
                            Key = "EnableQueryCaching",
                            CreatedDate = new DateTime(2025, 5, 26, 19, 27, 10, 999, DateTimeKind.Utc).AddTicks(7136),
                            DataType = "bool",
                            Description = "Enable caching of query results",
                            IsEncrypted = false,
                            LastUpdated = new DateTime(2025, 5, 26, 19, 27, 10, 999, DateTimeKind.Utc).AddTicks(7137),
                            UpdatedBy = "System",
                            Value = "true"
                        },
                        new
                        {
                            Key = "CacheExpiryHours",
                            CreatedDate = new DateTime(2025, 5, 26, 19, 27, 10, 999, DateTimeKind.Utc).AddTicks(7137),
                            DataType = "int",
                            Description = "Default cache expiry time in hours",
                            IsEncrypted = false,
                            LastUpdated = new DateTime(2025, 5, 26, 19, 27, 10, 999, DateTimeKind.Utc).AddTicks(7138),
                            UpdatedBy = "System",
                            Value = "24"
                        },
                        new
                        {
                            Key = "EnableAuditLogging",
                            CreatedDate = new DateTime(2025, 5, 26, 19, 27, 10, 999, DateTimeKind.Utc).AddTicks(7139),
                            DataType = "bool",
                            Description = "Enable comprehensive audit logging",
                            IsEncrypted = false,
                            LastUpdated = new DateTime(2025, 5, 26, 19, 27, 10, 999, DateTimeKind.Utc).AddTicks(7139),
                            UpdatedBy = "System",
                            Value = "true"
                        });
                });

            modelBuilder.Entity("BIReportingCopilot.Infrastructure.Data.Entities.SystemMetricsEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MetricName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp");

                    b.ToTable("SystemMetrics");
                });

            modelBuilder.Entity("BIReportingCopilot.Infrastructure.Data.Entities.UserEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BIReportingCopilot.Infrastructure.Data.Entities.UserPreferencesEntity", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DefaultDateRange")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("EnableAutoVisualization")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableQuerySuggestions")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxRowsPerQuery")
                        .HasColumnType("int");

                    b.Property<string>("NotificationSettings")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PreferredChartTypes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("UserPreferences");
                });

            modelBuilder.Entity("BIReportingCopilot.Infrastructure.Data.Entities.UserSessionEntity", b =>
                {
                    b.Property<string>("SessionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastActivity")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("SessionId");

                    b.HasIndex("LastActivity");

                    b.HasIndex("UserId");

                    b.ToTable("UserSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
