import React from 'react';
import { Card, CardContent } from '../ui';
import { Badge } from '../ui';
import { BookOpen } from 'lucide-react';
import { SchemaGlossaryTermDto } from '../../types/schemaManagement';

interface GlossaryTermEditorProps {
  glossaryTerms: SchemaGlossaryTermDto[];
  onUpdate: (updated: SchemaGlossaryTermDto) => void;
  onAdd: (newTerm: SchemaGlossaryTermDto) => void;
}

export const GlossaryTermEditor: React.FC<GlossaryTermEditorProps> = ({
  glossaryTerms,
  onUpdate,
  onAdd
}) => {
  if (glossaryTerms.length === 0) {
    return (
      <div className="text-center py-8">
        <BookOpen className="h-12 w-12 text-gray-400 mx-auto mb-4" />
        <h3 className="text-lg font-medium text-gray-900 mb-2">No Glossary Terms</h3>
        <p className="text-gray-600">No glossary terms available for this schema version.</p>
      </div>
    );
  }

  return (
    <div className="space-y-4">
      {glossaryTerms.map((term) => (
        <Card key={term.id}>
          <CardContent className="p-4">
            <div className="flex items-start justify-between">
              <div className="flex-1">
                <div className="flex items-center gap-2 mb-2">
                  <h4 className="font-medium text-gray-900">{term.term}</h4>
                  {term.isAutoGenerated && (
                    <Badge variant="secondary" className="text-xs">Auto</Badge>
                  )}
                  {term.category && (
                    <Badge variant="outline" className="text-xs">{term.category}</Badge>
                  )}
                </div>
                <p className="text-sm text-gray-600 mb-2">{term.definition}</p>
                {term.businessContext && (
                  <p className="text-sm text-gray-500 mb-2">{term.businessContext}</p>
                )}
                <div className="flex flex-wrap gap-1">
                  {term.synonyms.map((synonym, index) => (
                    <Badge key={index} variant="outline" className="text-xs">
                      {synonym}
                    </Badge>
                  ))}
                </div>
              </div>
            </div>
          </CardContent>
        </Card>
      ))}
    </div>
  );
};
